package com.onerivet.deskbook.service;

import java.util.List;
import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.context.config.ConfigDataResourceNotFoundException;
import org.springframework.data.domain.PageRequest;
import org.springframework.data.domain.Pageable;
import org.springframework.stereotype.Service;

import com.onerivet.deskbook.entity.User;
import com.onerivet.deskbook.exception.ResourceNotFound;
import com.onerivet.deskbook.repo.UserRepo;

@Service
public class UserServiceImpl implements UserService {

	@Autowired
	public UserRepo userrepo;

	@Override
	public String saveUser(User user) {
		userrepo.save(user);
		return "saved...";
	}

	@Override
	public List<User> getAll(int pageNumber, int pageSize) {
		Pageable pageble = PageRequest.of(pageNumber, pageSize);
		return userrepo.findAll(pageble).getContent();
	}

	@Override
	public User getByid(int id) {
		return userrepo.findById(id).orElseThrow(() -> new ResourceNotFound("User not found..."));
	}

	@Override
	public String deleteUser(int id) {
		User u = userrepo.findById(id).orElseThrow(() -> new ResourceNotFound("User not found..."));
		userrepo.deleteById(id);
		return "Deleted successfully...";
	}

	@Override
	public String updateUser(int id, User user) {
		User u = userrepo.findById(id).orElseThrow(() -> new ResourceNotFound("User not found..."));

		u.setName(user.getName());
		u.setEmail(user.getEmail());
		u.setPassword(user.getPassword());
		u.setMobile(user.getMobile());
		u.setCity(user.getCity());
		userrepo.save(u);
		return "Updated successfully...";
	}

}
